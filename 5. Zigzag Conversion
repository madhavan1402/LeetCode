5. Zigzag Conversion
This C++ program implements the "Zigzag Conversion" of a string into a specified number of rows. The input string is rearranged in a zigzag pattern based on the number of rows, and then the rows are concatenated to form the final result. If the number of rows is 1, the input string is returned as is. The code uses a vector of strings to store characters row by row, and a direction flag (drt) to switch between moving upward and downward through the rows.

class Solution {
public:
    string convert(string s, int numRows) {
        if(numRows <=1) return s;
        vector<string>v (numRows, "");
        int j=0, drt = -1;
        for(int i=0;i<s.length();i++){
            if(j==numRows-1 || j==0) drt *=(-1);
            v[j] += s[i];
            if(drt==1) j++;
            else j--;
        }
        string res;
        for(auto &it : v) res += it;
        return res;
    }
};
Key Points:
•	Handles special cases where numRows is 1.
•	Uses a vector to store characters for each row.
•	Adjusts the row index based on the zigzag direction.


